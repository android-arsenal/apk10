2018-05-22 05:18:27,379 INFO  DownloadService - Downloading "https://github.com/TeamAmaze/AmazeFileManager/archive/master.zip", attempt 3
2018-05-22 05:19:27,840 INFO  GithubDownloadService - Could not find ZIP archive for master branch
2018-05-22 05:19:28,532 INFO  GithubDownloadService - Default branch of this repository: master
2018-05-22 05:19:28,532 INFO  DownloadService - Downloading "https://github.com/TeamAmaze/AmazeFileManager/archive/master.zip", attempt 3
2018-05-22 05:20:29,947 DEBUG FullProcessService - Repository https://github.com/TeamAmaze/AmazeFileManager available: true
2018-05-22 05:20:29,947 INFO  FullProcessService - Could not download ZIP file from Github, lets clone it
2018-05-22 05:20:29,947 INFO  SysUtils - Execute command: [git, clone, -q, --single-branch, --depth, 1, https://github.com/TeamAmaze/AmazeFileManager, /tmp/rdisk/2328/src]
2018-05-22 05:20:39,023 INFO  SysUtils - 
2018-05-22 05:20:39,037 INFO  GitService - Deleted "/tmp/rdisk/2328/src/.git": true
2018-05-22 05:20:39,058 INFO  FullProcessService - Size of directory with sources: 4 MB
2018-05-22 05:20:39,058 INFO  SysUtils - Execute command: [git, init, /tmp/rdisk/2328/src]
2018-05-22 05:20:39,062 INFO  SysUtils - Initialized empty Git repository in /tmp/rdisk/2328/src/.git/

2018-05-22 05:20:39,076 INFO  ProjectBuildService - Gradle wrapper(s): /tmp/rdisk/2328/src/gradlew
2018-05-22 05:20:39,090 INFO  ProjectBuildService - Build script(s): /tmp/rdisk/2328/src/app/build.gradle /tmp/rdisk/2328/src/build.gradle
2018-05-22 05:20:39,104 INFO  ProjectBuildService - All script(s): /tmp/rdisk/2328/src/settings.gradle /tmp/rdisk/2328/src/build.gradle /tmp/rdisk/2328/src/app/build.gradle
2018-05-22 05:20:39,104 INFO  ProjectBuildService - Remote scripts: none
2018-05-22 05:20:39,104 INFO  ProjectFixService - Fixing project...
2018-05-22 05:20:39,140 INFO  LocalPropertiesFixService - Created fake /tmp/rdisk/2328/src/app/local.properties
2018-05-22 05:20:39,141 INFO  ProjectFixService - Build info for "/tmp/rdisk/2328/src/app/build.gradle": [buildToolsVersion=27.0.3,compileSdkVersion=26,minSdkVersion=14,targetSdkVersion=26]
2018-05-22 05:20:39,141 INFO  LocalPropertiesFixService - Created fake /tmp/rdisk/2328/src/local.properties
2018-05-22 05:20:39,141 INFO  WrapperPropertiesFixService - Gradle wrapper: https://services.gradle.org/distributions/gradle-4.4-all.zip
2018-05-22 05:20:39,141 INFO  WrapperPropertiesFixService - Gradle wrapper was changed from "-all.zip" to "-bin.zip" (https://services.gradle.org/distributions/gradle-4.4-bin.zip)
2018-05-22 05:20:39,142 INFO  ProjectFixService - Build info for "/tmp/rdisk/2328/src/build.gradle": [buildToolsVersion=27.0.3,compileSdkVersion=26,minSdkVersion=14,targetSdkVersion=26]
2018-05-22 05:20:39,142 INFO  ProjectFixService - Project was maybe fixed
2018-05-22 05:20:39,142 INFO  ProjectTaskService - Detecting possible tasks...
2018-05-22 05:20:39,143 INFO  SysUtils - Execute command: [/tmp/rdisk/2328/src/gradlew, -b, /tmp/rdisk/2328/src/app/build.gradle, -Dorg.gradle.daemon=false, -Dorg.gradle.daemon.performance.enable-monitoring=false, -Dorg.gradle.configureondemand=true, tasks]
2018-05-22 05:20:46,472 INFO  ProjectTaskService - Detected possible tasks: 67
2018-05-22 05:20:46,473 INFO  ProjectTaskService - Excluded tasks (19): lintDebug mockableAndroidJar deviceCheck lint testReleaseUnitTest uninstallRelease deviceAndroidTest uninstallDebugAndroidTest installDebugAndroidTest connectedCheck connectedDebugAndroidTest uninstallAll test check testDebugUnitTest connectedAndroidTest installDebug lintRelease uninstallDebug
2018-05-22 05:20:46,477 INFO  SysUtils - Execute command: [/tmp/rdisk/2328/src/gradlew, -b, /tmp/rdisk/2328/src/app/build.gradle, -Dorg.gradle.daemon=false, -Dorg.gradle.daemon.performance.enable-monitoring=false, -Dorg.gradle.configureondemand=true, --stacktrace, -x, lintDebug, -x, mockableAndroidJar, -x, deviceCheck, -x, lint, -x, testReleaseUnitTest, -x, uninstallRelease, -x, deviceAndroidTest, -x, uninstallDebugAndroidTest, -x, installDebugAndroidTest, -x, connectedCheck, -x, connectedDebugAndroidTest, -x, uninstallAll, -x, test, -x, check, -x, testDebugUnitTest, -x, connectedAndroidTest, -x, installDebug, -x, lintRelease, -x, uninstallDebug, build]
2018-05-22 05:22:23,200 ERROR SysUtils - Could not process external command
org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1)
	at org.apache.commons.exec.DefaultExecutor.executeInternal(DefaultExecutor.java:404)
	at org.apache.commons.exec.DefaultExecutor.execute(DefaultExecutor.java:166)
	at com.github.vbauer.apkmaster.util.SysUtils.execute(SysUtils.java:67)
	at com.github.vbauer.apkmaster.util.SysUtils.executeSimple(SysUtils.java:43)
	at com.github.vbauer.apkmaster.service.assembly.ProjectBuildService.buildProject(ProjectBuildService.java:78)
	at com.github.vbauer.apkmaster.service.assembly.ProjectBuildService.buildProject(ProjectBuildService.java:64)
	at com.github.vbauer.apkmaster.service.assembly.ProjectBuildService.buildProject(ProjectBuildService.java:43)
	at com.github.vbauer.apkmaster.service.FullProcessService.build(FullProcessService.java:84)
	at com.github.vbauer.apkmaster.service.FullProcessService.process(FullProcessService.java:34)
	at com.github.vbauer.apkmaster.app.MainApplication.process(MainApplication.java:38)
	at com.github.vbauer.apkmaster.app.MainApplication.main(MainApplication.java:20)
	at sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.android.arsenal.util.ReflectionUtils.invoke(ReflectionUtils.java:42)
	at com.android.arsenal.util.ApkMasterUtils.main(ApkMasterUtils.java:30)
	at com.android.arsenal.service.processor.impl.BuildProcessorServiceImpl.buildProject(BuildProcessorServiceImpl.java:197)
	at com.android.arsenal.service.processor.impl.BuildProcessorServiceImpl.build(BuildProcessorServiceImpl.java:131)
	at com.android.arsenal.service.processor.impl.BuildProcessorServiceImpl.lambda$null$1(BuildProcessorServiceImpl.java:114)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-05-22 05:22:23,201 INFO  SysUtils - Configuration on demand is an incubating feature.
signing.properties not found
:app:preBuild UP-TO-DATE
:app:preDebugBuild
:app:compileDebugAidl
:app:compileDebugRenderscript
:app:checkDebugManifest
:app:generateDebugBuildConfig
:app:prepareLintJar
:app:mainApkListPersistenceDebug
:app:generateDebugResValues
:app:generateDebugResources
:app:mergeDebugResources
:app:createDebugCompatibleScreenManifests
:app:processDebugManifest
:app:splitsDiscoveryTaskDebug
:app:processDebugResources
:app:generateDebugSources
:app:javaPreCompileDebug
:app:compileDebugJavaWithJavacNote: [1] Wrote GeneratedAppGlideModule with: []
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

:app:compileDebugNdk NO-SOURCE
:app:compileDebugSources
:app:mergeDebugShaders
:app:compileDebugShaders
:app:generateDebugAssets
:app:mergeDebugAssets
:app:extractTryWithResourcesSupportJarDebug
:app:transformClassesWithStackFramesFixerForDebug
:app:transformClassesWithDesugarForDebug
:app:transformClassesWithDexBuilderForDebug
:app:transformClassesWithMultidexlistForDebugWarning: The rule `-keep public class *extends java.lang.annotation.Annotation {
  *;
}` uses extends but actually matches implements.

:app:transformDexArchiveWithDexMergerForDebug
:app:mergeDebugJniLibFolders
:app:transformNativeLibsWithMergeJniLibsForDebug
:app:transformNativeLibsWithStripDebugSymbolForDebug
:app:processDebugJavaRes NO-SOURCE
:app:transformResourcesWithMergeJavaResForDebug
:app:validateSigningDebug
:app:packageDebug
:app:assembleDebug
:app:extractProguardFiles
:app:preReleaseBuild
:app:compileReleaseAidl
:app:compileReleaseRenderscript
:app:checkReleaseManifest
:app:generateReleaseBuildConfig
:app:mainApkListPersistenceRelease
:app:generateReleaseResValues
:app:generateReleaseResources
:app:mergeReleaseResources
:app:createReleaseCompatibleScreenManifests
:app:processReleaseManifest
:app:splitsDiscoveryTaskRelease
:app:processReleaseResources
:app:generateReleaseSources
:app:javaPreCompileRelease
:app:compileReleaseJavaWithJavacNote: [1] Wrote GeneratedAppGlideModule with: []
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

:app:compileReleaseNdk NO-SOURCE
:app:compileReleaseSources
:app:lintVitalRelease
:app:mergeReleaseShaders
:app:compileReleaseShaders
:app:generateReleaseAssets
:app:mergeReleaseAssets
:app:extractTryWithResourcesSupportJarRelease
:app:transformClassesWithStackFramesFixerForRelease
:app:transformClassesWithDesugarForRelease
:app:processReleaseJavaRes NO-SOURCE
:app:transformResourcesWithMergeJavaResForRelease
:app:transformClassesAndResourcesWithProguardForRelease
Request to incrementing alive workforce from 0. Current workforce (dead or alive) 0
thread-pool size=4
ProGuard, version 5.3.3
Reading input...
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/1.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/2.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/3.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/4.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/5.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/6.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/7.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/8.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/9.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/10.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/11.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/12.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/13.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/14.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/15.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/16.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/17.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/18.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/19.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/20.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/21.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/22.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/23.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/24.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/25.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/26.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/27.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/28.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/29.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/30.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/31.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/32.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/33.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/34.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/35.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/36.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/37.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/38.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/39.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/40.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/41.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/42.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/43.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/44.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/45.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/46.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/47.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/48.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/49.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/50.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/51.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/52.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/53.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/54.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/55.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/56.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/57.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/58.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/59.jar] (filtered)
Reading program directory [/tmp/rdisk/2328/src/app/build/intermediates/transforms/desugar/release/0] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/processing-tools/runtime-deps/release/desugar_try_with_resources.jar] (filtered)
Reading program jar [/tmp/rdisk/2328/src/app/build/intermediates/transforms/mergeJavaRes/release/0.jar] (filtered)
Reading library jar [/root/Applications/android-sdk/platforms/android-26/android.jar]
Note: duplicate definition of library class [junit.framework.TestSuite]
Note: duplicate definition of library class [junit.framework.ComparisonFailure]
Note: duplicate definition of library class [junit.framework.TestCase]
Note: duplicate definition of library class [junit.framework.Assert]
Note: duplicate definition of library class [junit.framework.TestListener]
Note: duplicate definition of library class [junit.framework.Protectable]
Note: duplicate definition of library class [junit.framework.TestResult]
Note: duplicate definition of library class [junit.framework.AssertionFailedError]
Note: duplicate definition of library class [junit.framework.TestFailure]
Note: duplicate definition of library class [junit.framework.Test]
Note: duplicate definition of library class [junit.runner.Version]
Note: duplicate definition of library class [junit.runner.BaseTestRunner]
Reading library jar [/root/Applications/android-sdk/platforms/android-26/optional/org.apache.http.legacy.jar]
Note: duplicate definition of library class [org.apache.http.params.HttpConnectionParams]
Note: duplicate definition of library class [org.apache.http.params.HttpParams]
Note: duplicate definition of library class [org.apache.http.params.CoreConnectionPNames]
Note: duplicate definition of library class [org.apache.http.conn.ConnectTimeoutException]
Note: duplicate definition of library class [org.apache.http.conn.scheme.HostNameResolver]
Note: duplicate definition of library class [org.apache.http.conn.scheme.SocketFactory]
Note: duplicate definition of library class [org.apache.http.conn.scheme.LayeredSocketFactory]
Note: duplicate definition of library class [android.net.http.SslCertificate$DName]
Note: duplicate definition of library class [android.net.http.SslCertificate]
Note: duplicate definition of library class [android.net.http.HttpResponseCache]
Note: duplicate definition of library class [android.net.http.SslError]
Note: there were 23 duplicate class definitions.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#duplicateclass)
Initializing...
Note: the configuration refers to the unknown class 'com.bumptech.glide.AppGlideModule'
      Maybe you meant the fully qualified name 'com.bumptech.glide.module.AppGlideModule'?
Warning: com.bumptech.glide.load.resource.bitmap.VideoDecoder: can't find referenced method 'android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int)' in library class android.media.MediaMetadataRetriever
Note: com.mikepenz.iconics.Iconics calls '(com.mikepenz.iconics.typeface.ITypeface)Class.forName(variable).newInstance()'
Note: com.readystatesoftware.systembartint.SystemBarTintManager: can't find dynamically referenced class android.os.SystemProperties
Note: eu.chainfire.libsuperuser.Shell$SU: can't find dynamically referenced class android.os.SELinux
Note: org.apache.commons.compress.compressors.lzma.LZMAUtils: can't find dynamically referenced class org.osgi.framework.BundleEvent
Note: org.apache.commons.compress.compressors.xz.XZUtils: can't find dynamically referenced class org.osgi.framework.BundleEvent
Note: the configuration keeps the entry point 'com.afollestad.materialdialogs.MaterialDialog$SingleButtonCallback { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.afollestad.materialdialogs.MaterialDialog$SingleButtonCallback { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.afollestad.materialdialogs.internal.MDButton { void setStackedGravity(com.afollestad.materialdialogs.GravityEnum); }', but not the descriptor class 'com.afollestad.materialdialogs.GravityEnum'
Note: the configuration keeps the entry point 'com.afollestad.materialdialogs.internal.MDRootLayout { void setStackingBehavior(com.afollestad.materialdialogs.StackingBehavior); }', but not the descriptor class 'com.afollestad.materialdialogs.StackingBehavior'
Note: the configuration keeps the entry point 'com.afollestad.materialdialogs.internal.MDRootLayout { void setButtonGravity(com.afollestad.materialdialogs.GravityEnum); }', but not the descriptor class 'com.afollestad.materialdialogs.GravityEnum'
Note: the configuration keeps the entry point 'com.afollestad.materialdialogs.internal.MDRootLayout { void setButtonStackedGravity(com.afollestad.materialdialogs.GravityEnum); }', but not the descriptor class 'com.afollestad.materialdialogs.GravityEnum'
Note: the configuration keeps the entry point 'com.amaze.filemanager.activities.TextEditorActivity$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.activities.TextEditorActivity$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.activities.TextEditorActivity$$Lambda$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.activities.TextEditorActivity$$Lambda$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.adapters.AppsAdapter$$Lambda$3 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.adapters.AppsAdapter$$Lambda$3 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.adapters.AppsAdapter$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.adapters.AppsAdapter$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.asynchronous.asynctasks.PrepareCopyTask$$Lambda$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.asynchronous.asynctasks.PrepareCopyTask$$Lambda$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.asynchronous.asynctasks.PrepareCopyTask$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.asynchronous.asynctasks.PrepareCopyTask$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask$$Lambda$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask$$Lambda$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.FTPServerFragment$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.FTPServerFragment$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.FTPServerFragment$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.FTPServerFragment$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.FTPServerFragment$$Lambda$5 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.FTPServerFragment$$Lambda$5 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.MainFragment$$Lambda$7 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.MainFragment$$Lambda$7 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.preference_fragments.PrefFrag$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.preference_fragments.PrefFrag$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.preference_fragments.PrefFrag$$Lambda$5 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.fragments.preference_fragments.PrefFrag$$Lambda$5 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$10 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$10 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$11 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$11 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$14 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$14 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$15 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$15 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$21 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$21 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$22 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$22 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$23 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$23 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$24 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$24 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$25 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$25 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$26 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$26 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$27 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$27 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$31 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$31 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$32 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$32 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$34 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$34 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$35 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$35 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$36 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$36 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$39 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$39 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$7 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$7 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$8 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$8 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$9 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.GeneralDialogCreation$$Lambda$9 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.RenameBookmark$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.RenameBookmark$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SftpConnectDialog$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SftpConnectDialog$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SftpConnectDialog$$Lambda$3 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SftpConnectDialog$$Lambda$3 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SftpConnectDialog$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SftpConnectDialog$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SftpConnectDialog$$Lambda$5 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SftpConnectDialog$$Lambda$5 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbConnectDialog$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbConnectDialog$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbConnectDialog$$Lambda$3 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbConnectDialog$$Lambda$3 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbConnectDialog$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbConnectDialog$$Lambda$4 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbSearchDialog$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbSearchDialog$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbSearchDialog$$Lambda$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.dialogs.SmbSearchDialog$$Lambda$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.ui.views.ScrimInsetsRelativeLayout { void setOnInsetsCallback(com.amaze.filemanager.ui.views.ScrimInsetsRelativeLayout$OnInsetsCallback); }', but not the descriptor class 'com.amaze.filemanager.ui.views.ScrimInsetsRelativeLayout$OnInsetsCallback'
Note: the configuration keeps the entry point 'com.amaze.filemanager.utils.MainActivityHelper$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.utils.MainActivityHelper$$Lambda$0 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.amaze.filemanager.utils.MainActivityHelper$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.MaterialDialog'
Note: the configuration keeps the entry point 'com.amaze.filemanager.utils.MainActivityHelper$$Lambda$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }', but not the descriptor class 'com.afollestad.materialdialogs.DialogAction'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.FastAdapter$1 { void onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem); }', but not the descriptor class 'com.mikepenz.fastadapter.FastAdapter'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.FastAdapter$1 { void onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem); }', but not the descriptor class 'com.mikepenz.fastadapter.IItem'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.IAdapterExtension { boolean onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem); }', but not the descriptor class 'com.mikepenz.fastadapter.FastAdapter'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.IAdapterExtension { boolean onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem); }', but not the descriptor class 'com.mikepenz.fastadapter.IItem'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.listeners.ClickEventHook { void onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem); }', but not the descriptor class 'com.mikepenz.fastadapter.FastAdapter'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.listeners.ClickEventHook { void onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem); }', but not the descriptor class 'com.mikepenz.fastadapter.IItem'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.listeners.OnClickListener { boolean onClick(android.view.View,com.mikepenz.fastadapter.IAdapter,com.mikepenz.fastadapter.IItem,int); }', but not the descriptor class 'com.mikepenz.fastadapter.IAdapter'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.listeners.OnClickListener { boolean onClick(android.view.View,com.mikepenz.fastadapter.IAdapter,com.mikepenz.fastadapter.IItem,int); }', but not the descriptor class 'com.mikepenz.fastadapter.IItem'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.select.SelectExtension { boolean onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem); }', but not the descriptor class 'com.mikepenz.fastadapter.FastAdapter'
Note: the configuration keeps the entry point 'com.mikepenz.fastadapter.select.SelectExtension { boolean onClick(android.view.View,int,com.mikepenz.fastadapter.FastAdapter,com.mikepenz.fastadapter.IItem); }', but not the descriptor class 'com.mikepenz.fastadapter.IItem'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.pkcs.CertificationRequest { CertificationRequest(org.bouncycastle.asn1.pkcs.CertificationRequestInfo,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.DERBitString); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.CertificationRequestInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.pkcs.CertificationRequest { CertificationRequest(org.bouncycastle.asn1.pkcs.CertificationRequestInfo,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.DERBitString); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.pkcs.CertificationRequest { CertificationRequest(org.bouncycastle.asn1.pkcs.CertificationRequestInfo,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.DERBitString); }', but not the descriptor class 'org.bouncycastle.asn1.DERBitString'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.pkcs.CertificationRequest { CertificationRequest(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { org.bouncycastle.asn1.x509.X509Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1TaggedObject'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { X509Name(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { X509Name(java.util.Vector,java.util.Hashtable,org.bouncycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.bouncycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { X509Name(java.util.Vector,java.util.Vector,org.bouncycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.bouncycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { X509Name(java.lang.String,org.bouncycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.bouncycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { X509Name(boolean,java.lang.String,org.bouncycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.bouncycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { X509Name(boolean,java.util.Hashtable,java.lang.String,org.bouncycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.bouncycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.asn1.x509.X509Name { void appendValue(java.lang.StringBuffer,java.util.Hashtable,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.agreement.kdf.DHKDFParameters { DHKDFParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,int,byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.agreement.kdf.DHKDFParameters { DHKDFParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,int,byte[],byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.GOST3411Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.GOST3411_2012Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.MD2Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.MD4Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.MD5Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.RIPEMD128Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.RIPEMD160Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.RIPEMD256Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.RIPEMD320Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SHA1Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SHA224Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SHA256Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SHA384Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SHA512Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SHA512tDigest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SM3Digest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SkeinDigest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.SkeinEngine { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.TigerDigest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.digests.WhirlpoolDigest { void reset(org.bouncycastle.util.Memoable); }', but not the descriptor class 'org.bouncycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { org.bouncycastle.math.ec.ECCurve configureCurve(org.bouncycastle.math.ec.ECCurve); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { org.bouncycastle.math.ec.ECCurve configureCurveGLV(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.endo.GLVTypeBParameters); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { org.bouncycastle.math.ec.ECCurve configureCurveGLV(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.endo.GLVTypeBParameters); }', but not the descriptor class 'org.bouncycastle.math.ec.endo.GLVTypeBParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { void defineCurve(java.lang.String,org.bouncycastle.asn1.x9.X9ECParametersHolder); }', but not the descriptor class 'org.bouncycastle.asn1.x9.X9ECParametersHolder'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { void defineCurveWithOID(java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.x9.X9ECParametersHolder); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { void defineCurveWithOID(java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.x9.X9ECParametersHolder); }', but not the descriptor class 'org.bouncycastle.asn1.x9.X9ECParametersHolder'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { void defineCurveAlias(java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { java.lang.String getName(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { org.bouncycastle.math.ec.ECCurve access$000(org.bouncycastle.math.ec.ECCurve); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { org.bouncycastle.math.ec.ECCurve access$100(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.endo.GLVTypeBParameters); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.CustomNamedCurves { org.bouncycastle.math.ec.ECCurve access$100(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.endo.GLVTypeBParameters); }', but not the descriptor class 'org.bouncycastle.math.ec.endo.GLVTypeBParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.ECElGamalEncryptor { org.bouncycastle.crypto.ec.ECPair encrypt(org.bouncycastle.math.ec.ECPoint); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.ECEncryptor { org.bouncycastle.crypto.ec.ECPair encrypt(org.bouncycastle.math.ec.ECPoint); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.ECPair { ECPair(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.math.ec.ECPoint); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.ec.ECPair { ECPair(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.math.ec.ECPoint); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.engines.IESEngine { void init(org.bouncycastle.crypto.params.AsymmetricKeyParameter,org.bouncycastle.crypto.CipherParameters,org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator); }', but not the descriptor class 'org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.modes.GCMBlockCipher { GCMBlockCipher(org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.modes.gcm.GCMMultiplier); }', but not the descriptor class 'org.bouncycastle.crypto.modes.gcm.GCMMultiplier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECPublicKeyParameters { ECPublicKeyParameters(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.crypto.params.ECDomainParameters); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.params.ECPublicKeyParameters { org.bouncycastle.math.ec.ECPoint validate(org.bouncycastle.math.ec.ECPoint); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.signers.DSTU4145Signer { org.bouncycastle.math.ec.ECFieldElement hash2FieldElement(org.bouncycastle.math.ec.ECCurve,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.signers.DSTU4145Signer { java.math.BigInteger fieldElement2Integer(java.math.BigInteger,org.bouncycastle.math.ec.ECFieldElement); }', but not the descriptor class 'org.bouncycastle.math.ec.ECFieldElement'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.signers.ECDSASigner { org.bouncycastle.math.ec.ECFieldElement getDenominator(int,org.bouncycastle.math.ec.ECPoint); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.crypto.signers.RSADigestSigner { RSADigestSigner(org.bouncycastle.crypto.Digest,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings { void addDigestSignature(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings { void addDigestSignature(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings { void addISO9796Signature(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings { void addPSSSignature(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings { void addX931Signature(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey { BCDHPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey { BCDHPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey { boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi { java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi { java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.security.interfaces.ECPrivateKey,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.bouncycastle.jce.spec.ECPrivateKeySpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,java.security.spec.ECPrivateKeySpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.bouncycastle.asn1.pkcs.PrivateKeyInfo,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.bouncycastle.asn1.pkcs.PrivateKeyInfo,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,java.security.spec.ECPublicKeySpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.bouncycastle.jce.spec.ECPublicKeySpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.bouncycastle.crypto.params.ECPublicKeyParameters,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.bouncycastle.crypto.params.ECPublicKeyParameters,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.bouncycastle.crypto.params.ECPublicKeyParameters,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.security.interfaces.ECPublicKey,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi { KeyFactorySpi(java.lang.String,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi { java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi { java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC { KeyPairGeneratorSpi$EC(java.lang.String,org.bouncycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey { BCRSAPrivateCrtKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey { BCRSAPrivateCrtKey(org.bouncycastle.asn1.pkcs.RSAPrivateKey); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.RSAPrivateKey'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey { BCRSAPrivateKey(org.bouncycastle.asn1.pkcs.RSAPrivateKey); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.RSAPrivateKey'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey { BCRSAPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey { void populateFromPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi { DigestSignatureSpi(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.AsymmetricBlockCipher); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi { java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi { java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil { boolean isRsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { org.bouncycastle.math.ec.ECCurve getCurve(org.bouncycastle.jcajce.provider.config.ProviderConfiguration,org.bouncycastle.asn1.x9.X962Parameters); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { org.bouncycastle.math.ec.ECCurve getCurve(org.bouncycastle.jcajce.provider.config.ProviderConfiguration,org.bouncycastle.asn1.x9.X962Parameters); }', but not the descriptor class 'org.bouncycastle.asn1.x9.X962Parameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { org.bouncycastle.crypto.params.ECDomainParameters getDomainParameters(org.bouncycastle.jcajce.provider.config.ProviderConfiguration,java.security.spec.ECParameterSpec); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve); }', but not the descriptor class 'org.bouncycastle.asn1.x9.X962Parameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X9ECParameters); }', but not the descriptor class 'org.bouncycastle.asn1.x9.X9ECParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.ECField convertField(org.bouncycastle.math.field.FiniteField); }', but not the descriptor class 'org.bouncycastle.math.field.FiniteField'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util { org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil { org.bouncycastle.crypto.params.ECDomainParameters getDomainParameters(org.bouncycastle.jcajce.provider.config.ProviderConfiguration,org.bouncycastle.jce.spec.ECParameterSpec); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil { org.bouncycastle.crypto.params.ECDomainParameters getDomainParameters(org.bouncycastle.jcajce.provider.config.ProviderConfiguration,org.bouncycastle.asn1.x9.X962Parameters); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil { org.bouncycastle.crypto.params.ECDomainParameters getDomainParameters(org.bouncycastle.jcajce.provider.config.ProviderConfiguration,org.bouncycastle.asn1.x9.X962Parameters); }', but not the descriptor class 'org.bouncycastle.asn1.x9.X962Parameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil { int getOrderBitLength(org.bouncycastle.jcajce.provider.config.ProviderConfiguration,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil { org.bouncycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil { java.lang.String getCurveName(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.DigestAlgorithmProvider { void addHMACAlgorithm(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.DigestAlgorithmProvider { void addHMACAlias(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.DigestAlgorithmProvider { void addHMACAlias(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.Keccak$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.MD2$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.MD4$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.MD5$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.SHA1$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.SHA224$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.SHA256$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.SHA3$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.SHA384$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.SHA512$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.SM3$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.Skein$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.Skein$Mappings { void addSkeinMacAlgorithm(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,int,int); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.Tiger$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.BC$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { java.lang.String getPublicKeyAlg(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { org.bouncycastle.asn1.bc.EncryptedPrivateKeyData createPrivateKeySequence(org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo,java.security.cert.Certificate[]); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { java.util.Date extractCreationDate(org.bouncycastle.asn1.bc.ObjectData,java.util.Date); }', but not the descriptor class 'org.bouncycastle.asn1.bc.ObjectData'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { byte[] generateKey(org.bouncycastle.asn1.pkcs.KeyDerivationFunc,java.lang.String,char[]); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.KeyDerivationFunc'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { void verifyMac(byte[],org.bouncycastle.asn1.bc.PbkdMacIntegrityCheck,char[]); }', but not the descriptor class 'org.bouncycastle.asn1.bc.PbkdMacIntegrityCheck'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { byte[] calculateMac(byte[],org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.pkcs.KeyDerivationFunc,char[]); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { byte[] calculateMac(byte[],org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.pkcs.KeyDerivationFunc,char[]); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.KeyDerivationFunc'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { byte[] decryptData(java.lang.String,org.bouncycastle.asn1.x509.AlgorithmIdentifier,char[],byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { PKCS12KeyStoreSpi(java.security.Provider,org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { PKCS12KeyStoreSpi(java.security.Provider,org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { byte[] getDigest(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { java.security.PrivateKey unwrapKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],char[],boolean); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { byte[] wrapKey(java.lang.String,java.security.Key,org.bouncycastle.asn1.pkcs.PKCS12PBEParams,char[]); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PKCS12PBEParams'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { byte[] cryptData(boolean,org.bouncycastle.asn1.x509.AlgorithmIdentifier,char[],boolean,byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { javax.crypto.Cipher createCipher(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { byte[] calculatePbeMac(org.bouncycastle.asn1.ASN1ObjectIdentifier,byte[],int,char[],boolean,byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider { int getKeySize(org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.AES$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.DES$DESPBEKeyFactory { DES$DESPBEKeyFactory(java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,int,int,int,int); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.DES$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.DES$Mappings { void addAlias(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.DES$Mappings { void addAlias(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.GcmSpecUtil { java.security.spec.AlgorithmParameterSpec extractGcmSpec(org.bouncycastle.asn1.ASN1Primitive); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Primitive'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2 { int getDigestCode(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.SymmetricAlgorithmProvider { void addCMacAlgorithm(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.SymmetricAlgorithmProvider { void addGMacAlgorithm(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.SymmetricAlgorithmProvider { void addPoly1305Algorithm(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey { BCPBEKey(java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier,int,int,int,int,javax.crypto.spec.PBEKeySpec,org.bouncycastle.crypto.CipherParameters); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory { BaseSecretKeyFactory(java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.symmetric.util.PBESecretKeyFactory { PBESecretKeyFactory(java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,int,int,int,int); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.util.AlgorithmProvider { void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void addSignatureAlgorithm(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void addSignatureAlgorithm(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOid(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOid(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOid(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOidAlgorithmParameters(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOidAlgorithmParameters(org.bouncycastle.jcajce.provider.config.ConfigurableProvider,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.spec.GOST28147ParameterSpec { GOST28147ParameterSpec(org.bouncycastle.asn1.ASN1ObjectIdentifier,byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.spec.GOST28147ParameterSpec { java.lang.String getName(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.spec.KTSParameterSpec { KTSParameterSpec(java.lang.String,int,java.security.spec.AlgorithmParameterSpec,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[]); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.spec.KTSParameterSpec { KTSParameterSpec(java.lang.String,int,java.security.spec.AlgorithmParameterSpec,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.jcajce.spec.KTSParameterSpec$1); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.spec.KTSParameterSpec$Builder { org.bouncycastle.jcajce.spec.KTSParameterSpec$Builder withKdfAlgorithm(org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jcajce.spec.PBKDF2KeySpec { PBKDF2KeySpec(char[],byte[],int,int,org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { org.bouncycastle.asn1.pkcs.RSASSAPSSparams creatPSSParams(org.bouncycastle.asn1.x509.AlgorithmIdentifier,int); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey); }', but not the descriptor class 'org.bouncycastle.asn1.x509.X509Name'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Set'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Set'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Set'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String); }', but not the descriptor class 'org.bouncycastle.asn1.x509.X509Name'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Set'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS10CertificationRequest { java.lang.String getDigestAlgName(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.PKCS12Util { byte[] calculatePbeMac(org.bouncycastle.asn1.ASN1ObjectIdentifier,byte[],int,char[],byte[],java.lang.String); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.X509Principal { org.bouncycastle.asn1.ASN1Sequence readSequence(org.bouncycastle.asn1.ASN1InputStream); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1InputStream'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.X509Principal { X509Principal(org.bouncycastle.asn1.x509.X509Name); }', but not the descriptor class 'org.bouncycastle.asn1.x509.X509Name'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.X509Principal { X509Principal(org.bouncycastle.asn1.x500.X500Name); }', but not the descriptor class 'org.bouncycastle.asn1.x500.X500Name'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.interfaces.PKCS12BagAttributeCarrier { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.netscape.NetscapeCertRequest { NetscapeCertRequest(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.netscape.NetscapeCertRequest { NetscapeCertRequest(java.lang.String,org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.PublicKey); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.netscape.NetscapeCertRequest { void setSigningAlgorithm(org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.netscape.NetscapeCertRequest { void setKeyAlgorithm(org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.BouncyCastleProvider { void addAlgorithm(java.lang.String,org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.BouncyCastleProvider { void addKeyInfoConverter(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.BouncyCastleProvider { void addKeyInfoConverter(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.BouncyCastleProvider { org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter getAsymmetricKeyInfoConverter(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.BouncyCastleProvider { java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.BouncyCastleProvider { java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { java.util.Date getValidDate(org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { boolean processCertD1i(int,java.util.List[],org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Set); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { void processCertD1ii(int,java.util.List[],org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Set); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { java.util.Collection findCertificates(org.bouncycastle.jcajce.PKIXCertStoreSelector,java.util.List); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXCertStoreSelector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { java.util.List getAdditionalStoresFromCRLDistributionPoint(org.bouncycastle.asn1.x509.CRLDistPoint,java.util.Map); }', but not the descriptor class 'org.bouncycastle.asn1.x509.CRLDistPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector); }', but not the descriptor class 'org.bouncycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { java.util.Date getValidCertDateFromValidityModel(org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.CertPath,int); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.CertPathValidatorUtilities { java.security.PublicKey getNextWorkingKey(java.util.List,int,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEDHPrivateKey { JCEDHPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEDHPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEDHPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEDHPrivateKey { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEDHPublicKey { JCEDHPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEDHPublicKey { boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEECPrivateKey { JCEECPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEECPrivateKey { void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEECPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEECPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEECPrivateKey { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEECPublicKey { JCEECPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEECPublicKey { void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEElGamalPrivateKey { JCEElGamalPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEElGamalPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEElGamalPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEElGamalPrivateKey { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCEElGamalPublicKey { JCEElGamalPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCERSAPrivateCrtKey { JCERSAPrivateCrtKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCERSAPrivateCrtKey { JCERSAPrivateCrtKey(org.bouncycastle.asn1.pkcs.RSAPrivateKey); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.RSAPrivateKey'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCERSAPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCERSAPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCERSAPrivateKey { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JCERSAPublicKey { JCERSAPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JDKDSAPrivateKey { JDKDSAPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JDKDSAPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JDKDSAPrivateKey { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JDKDSAPrivateKey { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JDKDSAPublicKey { JDKDSAPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.JDKDSAPublicKey { boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi { java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.jcajce.PKIXExtendedBuilderParameters,java.util.List); }', but not the descriptor class 'org.bouncycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi { java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.jcajce.PKIXExtendedBuilderParameters,java.util.List); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedBuilderParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi { java.util.Collection findCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector,java.util.List); }', but not the descriptor class 'org.bouncycastle.x509.X509AttributeCertStoreSelector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXCRLUtil { java.util.Set findCRLs(org.bouncycastle.jcajce.PKIXCRLStoreSelector,java.util.Date,java.util.List,java.util.List); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXCRLStoreSelector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXCRLUtil { java.util.Collection findCRLs(org.bouncycastle.jcajce.PKIXCRLStoreSelector,java.util.List); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXCRLStoreSelector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi { java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.bouncycastle.jcajce.PKIXExtendedBuilderParameters,java.util.List); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedBuilderParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void checkPermittedDN(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void checkExcludedDN(org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void checkPermittedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void checkExcludedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { java.util.Set unionDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void checkPermitted(org.bouncycastle.asn1.x509.GeneralName); }', but not the descriptor class 'org.bouncycastle.asn1.x509.GeneralName'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void checkExcluded(org.bouncycastle.asn1.x509.GeneralName); }', but not the descriptor class 'org.bouncycastle.asn1.x509.GeneralName'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree); }', but not the descriptor class 'org.bouncycastle.asn1.x509.GeneralSubtree'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[]); }', but not the descriptor class 'org.bouncycastle.asn1.x509.GeneralSubtree'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { java.lang.String extractNameAsString(org.bouncycastle.asn1.x509.GeneralName); }', but not the descriptor class 'org.bouncycastle.asn1.x509.GeneralName'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.PKIXNameConstraintValidator { void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree); }', but not the descriptor class 'org.bouncycastle.asn1.x509.GeneralSubtree'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL); }', but not the descriptor class 'org.bouncycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL); }', but not the descriptor class 'org.bouncycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,org.bouncycastle.asn1.x509.DistributionPoint); }', but not the descriptor class 'org.bouncycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { java.util.Set processCRLA1i(java.util.Date,org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { java.util.Set[] processCRLA1ii(java.util.Date,org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void processCRLI(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void processCertA(java.security.cert.CertPath,org.bouncycastle.jcajce.PKIXExtendedParameters,int,java.security.PublicKey,boolean,org.bouncycastle.asn1.x500.X500Name,java.security.cert.X509Certificate,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void processCertA(java.security.cert.CertPath,org.bouncycastle.jcajce.PKIXExtendedParameters,int,java.security.PublicKey,boolean,org.bouncycastle.asn1.x500.X500Name,java.security.cert.X509Certificate,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.asn1.x500.X500Name'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void processCertA(java.security.cert.CertPath,org.bouncycastle.jcajce.PKIXExtendedParameters,int,java.security.PublicKey,boolean,org.bouncycastle.asn1.x500.X500Name,java.security.cert.X509Certificate,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void checkCRLs(org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { void checkCRLs(org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3280CertPathUtilities { org.bouncycastle.jce.provider.PKIXPolicyNode wrapupCertG(java.security.cert.CertPath,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.Set,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.Set); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert7(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.Set); }', but not the descriptor class 'org.bouncycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert7(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.Set); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void additionalChecks(org.bouncycastle.x509.X509AttributeCertificate,java.util.Set,java.util.Set); }', but not the descriptor class 'org.bouncycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert5(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert5(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert3(java.security.cert.X509Certificate,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { java.security.cert.CertPathValidatorResult processAttrCert2(java.security.cert.CertPath,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.RFC3281CertPathUtilities { void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List,org.bouncycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.bouncycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.ReasonsMask { ReasonsMask(org.bouncycastle.asn1.x509.ReasonFlags); }', but not the descriptor class 'org.bouncycastle.asn1.x509.ReasonFlags'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CRLEntryObject { X509CRLEntryObject(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry); }', but not the descriptor class 'org.bouncycastle.asn1.x509.TBSCertList$CRLEntry'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CRLEntryObject { X509CRLEntryObject(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.bouncycastle.asn1.x500.X500Name); }', but not the descriptor class 'org.bouncycastle.asn1.x509.TBSCertList$CRLEntry'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CRLEntryObject { X509CRLEntryObject(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.bouncycastle.asn1.x500.X500Name); }', but not the descriptor class 'org.bouncycastle.asn1.x500.X500Name'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CRLEntryObject { org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name); }', but not the descriptor class 'org.bouncycastle.asn1.x500.X500Name'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CRLEntryObject { org.bouncycastle.asn1.x509.Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CRLObject { X509CRLObject(org.bouncycastle.asn1.x509.CertificateList); }', but not the descriptor class 'org.bouncycastle.asn1.x509.CertificateList'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CertificateObject { X509CertificateObject(org.bouncycastle.asn1.x509.Certificate); }', but not the descriptor class 'org.bouncycastle.asn1.x509.Certificate'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CertificateObject { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CertificateObject { void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CertificateObject { org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CertificateObject { boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509CertificateObject { boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509SignatureUtil { void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509SignatureUtil { java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509SignatureUtil { java.lang.String getDigestAlgName(org.bouncycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.bouncycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreAttrCertCollection { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreAttrCertCollection { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreCRLCollection { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreCRLCollection { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreCertCollection { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreCertCollection { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreCertPairCollection { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreCertPairCollection { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPCRLs { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPCRLs { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPCertPairs { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPCertPairs { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPCerts { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPCerts { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.provider.X509StoreLDAPCerts { java.util.Collection getCertificatesFromCrossCertificatePairs(org.bouncycastle.x509.X509CertStoreSelector); }', but not the descriptor class 'org.bouncycastle.x509.X509CertStoreSelector'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { java.security.spec.ECField convertField(org.bouncycastle.math.field.FiniteField); }', but not the descriptor class 'org.bouncycastle.math.field.FiniteField'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { java.security.spec.ECPoint convertPoint(org.bouncycastle.math.ec.ECPoint); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.ECPublicKeySpec { ECPublicKeySpec(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.jce.spec.ECParameterSpec); }', but not the descriptor class 'org.bouncycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.bouncycastle.jce.spec.GOST3410ParameterSpec { org.bouncycastle.jce.spec.GOST3410ParameterSpec fromPublicKeyAlg(org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters); }', but not the descriptor class 'org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.x509.X509StoreSpi { void engineInit(org.bouncycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.bouncycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.bouncycastle.x509.X509StoreSpi { java.util.Collection engineGetMatches(org.bouncycastle.util.Selector); }', but not the descriptor class 'org.bouncycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.pkcs.CertificationRequest { CertificationRequest(org.spongycastle.asn1.pkcs.CertificationRequestInfo,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.DERBitString); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.CertificationRequestInfo'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.pkcs.CertificationRequest { CertificationRequest(org.spongycastle.asn1.pkcs.CertificationRequestInfo,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.DERBitString); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.pkcs.CertificationRequest { CertificationRequest(org.spongycastle.asn1.pkcs.CertificationRequestInfo,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.DERBitString); }', but not the descriptor class 'org.spongycastle.asn1.DERBitString'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.pkcs.CertificationRequest { CertificationRequest(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { org.spongycastle.asn1.x509.X509Name getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean); }', but not the descriptor class 'org.spongycastle.asn1.ASN1TaggedObject'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { X509Name(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { X509Name(java.util.Vector,java.util.Hashtable,org.spongycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.spongycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { X509Name(java.util.Vector,java.util.Vector,org.spongycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.spongycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { X509Name(java.lang.String,org.spongycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.spongycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { X509Name(boolean,java.lang.String,org.spongycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.spongycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { X509Name(boolean,java.util.Hashtable,java.lang.String,org.spongycastle.asn1.x509.X509NameEntryConverter); }', but not the descriptor class 'org.spongycastle.asn1.x509.X509NameEntryConverter'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { java.util.Vector getValues(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.asn1.x509.X509Name { void appendValue(java.lang.StringBuffer,java.util.Hashtable,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.ECVKOAgreement { byte[] fromPoint(org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.SM2KeyExchange { byte[] kdf(org.spongycastle.math.ec.ECPoint,byte[],byte[],int); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.SM2KeyExchange { byte[] S1(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECPoint,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.SM2KeyExchange { byte[] calculateInnerHash(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECPoint,byte[],byte[],org.spongycastle.math.ec.ECPoint,org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.SM2KeyExchange { byte[] calculateInnerHash(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECPoint,byte[],byte[],org.spongycastle.math.ec.ECPoint,org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.SM2KeyExchange { byte[] calculateInnerHash(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECPoint,byte[],byte[],org.spongycastle.math.ec.ECPoint,org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.SM2KeyExchange { byte[] S2(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECPoint,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.SM2KeyExchange { byte[] getZ(org.spongycastle.crypto.Digest,byte[],org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.SM2KeyExchange { void addFieldElement(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECFieldElement); }', but not the descriptor class 'org.spongycastle.math.ec.ECFieldElement'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.kdf.DHKDFParameters { DHKDFParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,int,byte[]); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.agreement.kdf.DHKDFParameters { DHKDFParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,int,byte[],byte[]); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.DSTU7564Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.GOST3411Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.GOST3411_2012Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.MD2Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.MD4Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.MD5Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.RIPEMD128Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.RIPEMD160Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.RIPEMD256Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.RIPEMD320Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SHA1Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SHA224Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SHA256Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SHA384Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SHA512Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SHA512tDigest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SM3Digest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SkeinDigest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.SkeinEngine { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.TigerDigest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.digests.WhirlpoolDigest { void reset(org.spongycastle.util.Memoable); }', but not the descriptor class 'org.spongycastle.util.Memoable'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { org.spongycastle.math.ec.ECCurve configureCurve(org.spongycastle.math.ec.ECCurve); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { org.spongycastle.math.ec.ECCurve configureCurveGLV(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.endo.GLVTypeBParameters); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { org.spongycastle.math.ec.ECCurve configureCurveGLV(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.endo.GLVTypeBParameters); }', but not the descriptor class 'org.spongycastle.math.ec.endo.GLVTypeBParameters'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { void defineCurve(java.lang.String,org.spongycastle.asn1.x9.X9ECParametersHolder); }', but not the descriptor class 'org.spongycastle.asn1.x9.X9ECParametersHolder'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { void defineCurveWithOID(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.x9.X9ECParametersHolder); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { void defineCurveWithOID(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.x9.X9ECParametersHolder); }', but not the descriptor class 'org.spongycastle.asn1.x9.X9ECParametersHolder'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { void defineCurveAlias(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { org.spongycastle.asn1.x9.X9ECParameters getByOID(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { java.lang.String getName(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { org.spongycastle.math.ec.ECCurve access$000(org.spongycastle.math.ec.ECCurve); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { org.spongycastle.math.ec.ECCurve access$100(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.endo.GLVTypeBParameters); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.CustomNamedCurves { org.spongycastle.math.ec.ECCurve access$100(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.endo.GLVTypeBParameters); }', but not the descriptor class 'org.spongycastle.math.ec.endo.GLVTypeBParameters'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.ECElGamalEncryptor { org.spongycastle.crypto.ec.ECPair encrypt(org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.ECEncryptor { org.spongycastle.crypto.ec.ECPair encrypt(org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.ECPair { ECPair(org.spongycastle.math.ec.ECPoint,org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.ec.ECPair { ECPair(org.spongycastle.math.ec.ECPoint,org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.engines.IESEngine { void init(org.spongycastle.crypto.params.AsymmetricKeyParameter,org.spongycastle.crypto.CipherParameters,org.spongycastle.crypto.generators.EphemeralKeyPairGenerator); }', but not the descriptor class 'org.spongycastle.crypto.generators.EphemeralKeyPairGenerator'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.engines.SM2Engine { void kdf(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECPoint,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.engines.SM2Engine { void addFieldElement(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECFieldElement); }', but not the descriptor class 'org.spongycastle.math.ec.ECFieldElement'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.modes.GCMBlockCipher { GCMBlockCipher(org.spongycastle.crypto.BlockCipher,org.spongycastle.crypto.modes.gcm.GCMMultiplier); }', but not the descriptor class 'org.spongycastle.crypto.modes.gcm.GCMMultiplier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECDomainParameters { ECDomainParameters(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECNamedDomainParameters { ECNamedDomainParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECPublicKeyParameters { ECPublicKeyParameters(org.spongycastle.math.ec.ECPoint,org.spongycastle.crypto.params.ECDomainParameters); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.params.ECPublicKeyParameters { org.spongycastle.math.ec.ECPoint validate(org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.signers.DSTU4145Signer { org.spongycastle.math.ec.ECFieldElement hash2FieldElement(org.spongycastle.math.ec.ECCurve,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.signers.DSTU4145Signer { java.math.BigInteger fieldElement2Integer(java.math.BigInteger,org.spongycastle.math.ec.ECFieldElement); }', but not the descriptor class 'org.spongycastle.math.ec.ECFieldElement'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.signers.ECDSASigner { org.spongycastle.math.ec.ECFieldElement getDenominator(int,org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.signers.RSADigestSigner { RSADigestSigner(org.spongycastle.crypto.Digest,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.crypto.signers.SM2Signer { void addFieldElement(org.spongycastle.crypto.Digest,org.spongycastle.math.ec.ECFieldElement); }', but not the descriptor class 'org.spongycastle.math.ec.ECFieldElement'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.DH$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.DSTU4145$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.EC$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ECGOST$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ElGamal$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.GM$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.GOST$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.IES$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.RSA$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.RSA$Mappings { void addDigestSignature(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.RSA$Mappings { void addDigestSignature(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.RSA$Mappings { void addISO9796Signature(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.RSA$Mappings { void addPSSSignature(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.RSA$Mappings { void addX931Signature(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.X509$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey { BCDHPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey { BCDHPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey { boolean isPKCSParam(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi { java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi { java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.security.interfaces.ECPrivateKey,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.spongycastle.jce.spec.ECPrivateKeySpec,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,java.security.spec.ECPrivateKeySpec,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.spongycastle.crypto.params.ECPrivateKeyParameters,org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.spongycastle.crypto.params.ECPrivateKeyParameters,org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.spongycastle.jce.spec.ECParameterSpec,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.spongycastle.crypto.params.ECPrivateKeyParameters,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.spongycastle.asn1.pkcs.PrivateKeyInfo,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { BCECPrivateKey(java.lang.String,org.spongycastle.asn1.pkcs.PrivateKeyInfo,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { void populateFromPrivKeyInfo(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,java.security.spec.ECPublicKeySpec,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.spongycastle.jce.spec.ECPublicKeySpec,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.spongycastle.crypto.params.ECPublicKeyParameters,java.security.spec.ECParameterSpec,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.spongycastle.crypto.params.ECPublicKeyParameters,org.spongycastle.jce.spec.ECParameterSpec,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.spongycastle.crypto.params.ECPublicKeyParameters,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.security.interfaces.ECPublicKey,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.spongycastle.asn1.x509.SubjectPublicKeyInfo,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { BCECPublicKey(java.lang.String,org.spongycastle.asn1.x509.SubjectPublicKeyInfo,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.BCECPublicKey { void populateFromPubKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi { KeyFactorySpi(java.lang.String,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi { java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi { java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC { KeyPairGeneratorSpi$EC(java.lang.String,org.spongycastle.jcajce.provider.config.ProviderConfiguration); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey { BCRSAPrivateCrtKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey { BCRSAPrivateCrtKey(org.spongycastle.asn1.pkcs.RSAPrivateKey); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.RSAPrivateKey'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey { BCRSAPrivateKey(org.spongycastle.asn1.pkcs.RSAPrivateKey); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.RSAPrivateKey'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey { BCRSAPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey { void populateFromPublicKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi { DigestSignatureSpi(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.crypto.Digest,org.spongycastle.crypto.AsymmetricBlockCipher); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi { java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi { java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.rsa.RSAUtil { boolean isRsaOid(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { org.spongycastle.math.ec.ECCurve getCurve(org.spongycastle.jcajce.provider.config.ProviderConfiguration,org.spongycastle.asn1.x9.X962Parameters); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { org.spongycastle.math.ec.ECCurve getCurve(org.spongycastle.jcajce.provider.config.ProviderConfiguration,org.spongycastle.asn1.x9.X962Parameters); }', but not the descriptor class 'org.spongycastle.asn1.x9.X962Parameters'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { org.spongycastle.crypto.params.ECDomainParameters getDomainParameters(org.spongycastle.jcajce.provider.config.ProviderConfiguration,java.security.spec.ECParameterSpec); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.ECParameterSpec convertToSpec(org.spongycastle.asn1.x9.X962Parameters,org.spongycastle.math.ec.ECCurve); }', but not the descriptor class 'org.spongycastle.asn1.x9.X962Parameters'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.ECParameterSpec convertToSpec(org.spongycastle.asn1.x9.X962Parameters,org.spongycastle.math.ec.ECCurve); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.ECParameterSpec convertToSpec(org.spongycastle.asn1.x9.X9ECParameters); }', but not the descriptor class 'org.spongycastle.asn1.x9.X9ECParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { java.security.spec.ECField convertField(org.spongycastle.math.field.FiniteField); }', but not the descriptor class 'org.spongycastle.math.field.FiniteField'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.EC5Util { org.spongycastle.math.ec.ECPoint convertPoint(org.spongycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.ECUtil { org.spongycastle.crypto.params.ECDomainParameters getDomainParameters(org.spongycastle.jcajce.provider.config.ProviderConfiguration,org.spongycastle.jce.spec.ECParameterSpec); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.ECUtil { org.spongycastle.crypto.params.ECDomainParameters getDomainParameters(org.spongycastle.jcajce.provider.config.ProviderConfiguration,org.spongycastle.asn1.x9.X962Parameters); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.ECUtil { org.spongycastle.crypto.params.ECDomainParameters getDomainParameters(org.spongycastle.jcajce.provider.config.ProviderConfiguration,org.spongycastle.asn1.x9.X962Parameters); }', but not the descriptor class 'org.spongycastle.asn1.x9.X962Parameters'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.ECUtil { int getOrderBitLength(org.spongycastle.jcajce.provider.config.ProviderConfiguration,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ProviderConfiguration'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.ECUtil { org.spongycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.ECUtil { java.lang.String getCurveName(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.ECUtil { java.lang.String publicKeyToString(java.lang.String,org.spongycastle.math.ec.ECPoint,org.spongycastle.jce.spec.ECParameterSpec); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.ECUtil { java.lang.String generateKeyFingerprint(org.spongycastle.math.ec.ECPoint,org.spongycastle.jce.spec.ECParameterSpec); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[]); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedPrivateKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedPrivateKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.KeyUtil { byte[] getEncodedPrivateKeyInfo(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.Blake2b$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.DSTU7564$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.DigestAlgorithmProvider { void addHMACAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.DigestAlgorithmProvider { void addHMACAlias(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.DigestAlgorithmProvider { void addHMACAlias(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.GOST3411$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.Keccak$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.MD2$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.MD4$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.MD5$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.RIPEMD128$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.RIPEMD160$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.RIPEMD256$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.RIPEMD320$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.SHA1$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.SHA224$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.SHA256$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.SHA3$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.SHA384$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.SHA512$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.SM3$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.Skein$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.Skein$Mappings { void addSkeinMacAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,int,int); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.Tiger$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.digest.Whirlpool$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.BC$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.BCFKS$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.PKCS12$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { java.lang.String getPublicKeyAlg(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { org.spongycastle.asn1.bc.EncryptedPrivateKeyData createPrivateKeySequence(org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo,java.security.cert.Certificate[]); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { java.util.Date extractCreationDate(org.spongycastle.asn1.bc.ObjectData,java.util.Date); }', but not the descriptor class 'org.spongycastle.asn1.bc.ObjectData'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { byte[] generateKey(org.spongycastle.asn1.pkcs.KeyDerivationFunc,java.lang.String,char[]); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.KeyDerivationFunc'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { void verifyMac(byte[],org.spongycastle.asn1.bc.PbkdMacIntegrityCheck,char[]); }', but not the descriptor class 'org.spongycastle.asn1.bc.PbkdMacIntegrityCheck'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { byte[] calculateMac(byte[],org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.pkcs.KeyDerivationFunc,char[]); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { byte[] calculateMac(byte[],org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.pkcs.KeyDerivationFunc,char[]); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.KeyDerivationFunc'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.bcfks.BcFKSKeyStoreSpi { byte[] decryptData(java.lang.String,org.spongycastle.asn1.x509.AlgorithmIdentifier,char[],byte[]); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { PKCS12KeyStoreSpi(java.security.Provider,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { PKCS12KeyStoreSpi(java.security.Provider,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { byte[] getDigest(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { java.security.PrivateKey unwrapKey(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[],char[],boolean); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { byte[] wrapKey(java.lang.String,java.security.Key,org.spongycastle.asn1.pkcs.PKCS12PBEParams,char[]); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PKCS12PBEParams'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { byte[] cryptData(boolean,org.spongycastle.asn1.x509.AlgorithmIdentifier,char[],boolean,byte[]); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { javax.crypto.Cipher createCipher(int,char[],org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi { byte[] calculatePbeMac(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[],int,char[],boolean,byte[]); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider { int getKeySize(org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.AES$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.ARC4$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.ARIA$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Blowfish$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.CAST5$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.CAST6$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Camellia$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.ChaCha$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.DES$DESPBEKeyFactory { DES$DESPBEKeyFactory(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier,boolean,int,int,int,int); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.DES$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.DES$Mappings { void addAlias(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.DES$Mappings { void addAlias(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.DESede$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.DSTU7624$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.GOST28147$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil { java.security.spec.AlgorithmParameterSpec extractGcmSpec(org.spongycastle.asn1.ASN1Primitive); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Primitive'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Grain128$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Grainv1$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.HC128$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.HC256$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.IDEA$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Noekeon$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2 { int getDigestCode(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Poly1305$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.RC2$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.RC5$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.RC6$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.SEED$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.SM4$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Salsa20$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Serpent$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Shacal2$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.SipHash$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Skipjack$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.SymmetricAlgorithmProvider { void addCMacAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.SymmetricAlgorithmProvider { void addGMacAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.SymmetricAlgorithmProvider { void addPoly1305Algorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.TEA$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.TLSKDF$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Threefish$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.Twofish$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.VMPC$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.XSalsa20$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.XTEA$Mappings { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.util.BCPBEKey { BCPBEKey(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier,int,int,int,int,javax.crypto.spec.PBEKeySpec,org.spongycastle.crypto.CipherParameters); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory { BaseSecretKeyFactory(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.symmetric.util.PBESecretKeyFactory { PBESecretKeyFactory(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier,boolean,int,int,int,int); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AlgorithmProvider { void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void addSignatureAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void addSignatureAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOid(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOid(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOid(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOidAlgorithmParameters(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOidAlgorithmParameters(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOidAlgorithmParameterGenerator(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.spongycastle.jcajce.provider.config.ConfigurableProvider'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider { void registerOidAlgorithmParameterGenerator(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.spec.GOST28147ParameterSpec { GOST28147ParameterSpec(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[]); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.spec.GOST28147ParameterSpec { java.lang.String getName(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.spec.GOST28147WrapParameterSpec { GOST28147WrapParameterSpec(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[]); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.spec.GOST28147WrapParameterSpec { java.lang.String getName(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.spec.KTSParameterSpec { KTSParameterSpec(java.lang.String,int,java.security.spec.AlgorithmParameterSpec,org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[]); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.spec.KTSParameterSpec { KTSParameterSpec(java.lang.String,int,java.security.spec.AlgorithmParameterSpec,org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[],org.spongycastle.jcajce.spec.KTSParameterSpec$1); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.spec.KTSParameterSpec$Builder { org.spongycastle.jcajce.spec.KTSParameterSpec$Builder withKdfAlgorithm(org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jcajce.spec.PBKDF2KeySpec { PBKDF2KeySpec(char[],byte[],int,int,org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { org.spongycastle.asn1.pkcs.RSASSAPSSparams creatPSSParams(org.spongycastle.asn1.x509.AlgorithmIdentifier,int); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,org.spongycastle.asn1.x509.X509Name,java.security.PublicKey,org.spongycastle.asn1.ASN1Set,java.security.PrivateKey); }', but not the descriptor class 'org.spongycastle.asn1.x509.X509Name'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,org.spongycastle.asn1.x509.X509Name,java.security.PublicKey,org.spongycastle.asn1.ASN1Set,java.security.PrivateKey); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Set'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.spongycastle.asn1.ASN1Set,java.security.PrivateKey); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Set'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.spongycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Set'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,org.spongycastle.asn1.x509.X509Name,java.security.PublicKey,org.spongycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.x509.X509Name'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { PKCS10CertificationRequest(java.lang.String,org.spongycastle.asn1.x509.X509Name,java.security.PublicKey,org.spongycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Set'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { void setSignatureParameters(java.security.Signature,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { java.lang.String getSignatureName(org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS10CertificationRequest { java.lang.String getDigestAlgName(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.PKCS12Util { byte[] calculatePbeMac(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[],int,char[],byte[],java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.X509Principal { org.spongycastle.asn1.ASN1Sequence readSequence(org.spongycastle.asn1.ASN1InputStream); }', but not the descriptor class 'org.spongycastle.asn1.ASN1InputStream'
Note: the configuration keeps the entry point 'org.spongycastle.jce.X509Principal { X509Principal(org.spongycastle.asn1.x509.X509Name); }', but not the descriptor class 'org.spongycastle.asn1.x509.X509Name'
Note: the configuration keeps the entry point 'org.spongycastle.jce.X509Principal { X509Principal(org.spongycastle.asn1.x500.X500Name); }', but not the descriptor class 'org.spongycastle.asn1.x500.X500Name'
Note: the configuration keeps the entry point 'org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.netscape.NetscapeCertRequest { NetscapeCertRequest(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.netscape.NetscapeCertRequest { NetscapeCertRequest(java.lang.String,org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.PublicKey); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.netscape.NetscapeCertRequest { void setSigningAlgorithm(org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.netscape.NetscapeCertRequest { void setKeyAlgorithm(org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.BouncyCastleProvider { void addAlgorithm(java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.BouncyCastleProvider { void addKeyInfoConverter(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.BouncyCastleProvider { void addKeyInfoConverter(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter); }', but not the descriptor class 'org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.BouncyCastleProvider { org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter getAsymmetricKeyInfoConverter(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.BouncyCastleProvider { java.security.PublicKey getPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.BouncyCastleProvider { java.security.PrivateKey getPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { java.util.Date getValidDate(org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { java.util.Set getQualifierSet(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { boolean processCertD1i(int,java.util.List[],org.spongycastle.asn1.ASN1ObjectIdentifier,java.util.Set); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { void processCertD1ii(int,java.util.List[],org.spongycastle.asn1.ASN1ObjectIdentifier,java.util.Set); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { java.util.Collection findCertificates(org.spongycastle.jcajce.PKIXCertStoreSelector,java.util.List); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXCertStoreSelector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { java.util.List getAdditionalStoresFromCRLDistributionPoint(org.spongycastle.asn1.x509.CRLDistPoint,java.util.Map); }', but not the descriptor class 'org.spongycastle.asn1.x509.CRLDistPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { void getCRLIssuersFromDistributionPoint(org.spongycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector); }', but not the descriptor class 'org.spongycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { java.util.Set getCompleteCRLs(org.spongycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { java.util.Set getCompleteCRLs(org.spongycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { java.util.Date getValidCertDateFromValidityModel(org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.CertPath,int); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.CertPathValidatorUtilities { java.security.PublicKey getNextWorkingKey(java.util.List,int,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEDHPrivateKey { JCEDHPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEDHPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEDHPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEDHPrivateKey { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEDHPublicKey { JCEDHPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEDHPublicKey { boolean isPKCSParam(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEECPrivateKey { JCEECPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEECPrivateKey { void populateFromPrivKeyInfo(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEECPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEECPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEECPrivateKey { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEECPublicKey { JCEECPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEECPublicKey { void populateFromPubKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEElGamalPrivateKey { JCEElGamalPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEElGamalPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEElGamalPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEElGamalPrivateKey { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCEElGamalPublicKey { JCEElGamalPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCERSAPrivateCrtKey { JCERSAPrivateCrtKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCERSAPrivateCrtKey { JCERSAPrivateCrtKey(org.spongycastle.asn1.pkcs.RSAPrivateKey); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.RSAPrivateKey'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCERSAPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCERSAPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCERSAPrivateKey { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JCERSAPublicKey { JCERSAPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JDKDSAPrivateKey { JDKDSAPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.pkcs.PrivateKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JDKDSAPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JDKDSAPrivateKey { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JDKDSAPrivateKey { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JDKDSAPublicKey { JDKDSAPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo); }', but not the descriptor class 'org.spongycastle.asn1.x509.SubjectPublicKeyInfo'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.JDKDSAPublicKey { boolean isNotNull(org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi { java.security.cert.CertPathBuilderResult build(org.spongycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.spongycastle.jcajce.PKIXExtendedBuilderParameters,java.util.List); }', but not the descriptor class 'org.spongycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi { java.security.cert.CertPathBuilderResult build(org.spongycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.spongycastle.jcajce.PKIXExtendedBuilderParameters,java.util.List); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedBuilderParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi { java.util.Collection findCertificates(org.spongycastle.x509.X509AttributeCertStoreSelector,java.util.List); }', but not the descriptor class 'org.spongycastle.x509.X509AttributeCertStoreSelector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXCRLUtil { java.util.Set findCRLs(org.spongycastle.jcajce.PKIXCRLStoreSelector,java.util.Date,java.util.List,java.util.List); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXCRLStoreSelector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXCRLUtil { java.util.Collection findCRLs(org.spongycastle.jcajce.PKIXCRLStoreSelector,java.util.List); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXCRLStoreSelector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXCertPathBuilderSpi { java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.spongycastle.jcajce.PKIXExtendedBuilderParameters,java.util.List); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedBuilderParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void checkPermittedDN(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void checkExcludedDN(org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void checkPermittedDN(java.util.Set,org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void checkExcludedDN(java.util.Set,org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { java.util.Set unionDN(java.util.Set,org.spongycastle.asn1.ASN1Sequence); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Sequence'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void checkPermitted(org.spongycastle.asn1.x509.GeneralName); }', but not the descriptor class 'org.spongycastle.asn1.x509.GeneralName'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void checkExcluded(org.spongycastle.asn1.x509.GeneralName); }', but not the descriptor class 'org.spongycastle.asn1.x509.GeneralName'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void intersectPermittedSubtree(org.spongycastle.asn1.x509.GeneralSubtree); }', but not the descriptor class 'org.spongycastle.asn1.x509.GeneralSubtree'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void intersectPermittedSubtree(org.spongycastle.asn1.x509.GeneralSubtree[]); }', but not the descriptor class 'org.spongycastle.asn1.x509.GeneralSubtree'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName); }', but not the descriptor class 'org.spongycastle.asn1.x509.GeneralName'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.PKIXNameConstraintValidator { void addExcludedSubtree(org.spongycastle.asn1.x509.GeneralSubtree); }', but not the descriptor class 'org.spongycastle.asn1.x509.GeneralSubtree'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void processCRLB2(org.spongycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL); }', but not the descriptor class 'org.spongycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void processCRLB1(org.spongycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL); }', but not the descriptor class 'org.spongycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { org.spongycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,org.spongycastle.asn1.x509.DistributionPoint); }', but not the descriptor class 'org.spongycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { java.util.Set processCRLA1i(java.util.Date,org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { java.util.Set[] processCRLA1ii(java.util.Date,org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void processCRLI(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void processCertA(java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters,int,java.security.PublicKey,boolean,org.spongycastle.asn1.x500.X500Name,java.security.cert.X509Certificate,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void processCertA(java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters,int,java.security.PublicKey,boolean,org.spongycastle.asn1.x500.X500Name,java.security.cert.X509Certificate,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.asn1.x500.X500Name'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void processCertA(java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters,int,java.security.PublicKey,boolean,org.spongycastle.asn1.x500.X500Name,java.security.cert.X509Certificate,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void checkCRLs(org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { void checkCRLs(org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3280CertPathUtilities { org.spongycastle.jce.provider.PKIXPolicyNode wrapupCertG(java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Set,int,java.util.List[],org.spongycastle.jce.provider.PKIXPolicyNode,java.util.Set); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert7(org.spongycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Set); }', but not the descriptor class 'org.spongycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert7(org.spongycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Set); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void checkCRLs(org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void checkCRLs(org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void checkCRLs(org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void additionalChecks(org.spongycastle.x509.X509AttributeCertificate,java.util.Set,java.util.Set); }', but not the descriptor class 'org.spongycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert5(org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert5(org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void processAttrCert3(java.security.cert.X509Certificate,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { java.security.cert.CertPathValidatorResult processAttrCert2(java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { java.security.cert.CertPath processAttrCert1(org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { java.security.cert.CertPath processAttrCert1(org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.asn1.x509.DistributionPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.x509.X509AttributeCertificate'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.PKIXExtendedParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.RFC3281CertPathUtilities { void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper); }', but not the descriptor class 'org.spongycastle.jcajce.util.JcaJceHelper'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.ReasonsMask { ReasonsMask(org.spongycastle.asn1.x509.ReasonFlags); }', but not the descriptor class 'org.spongycastle.asn1.x509.ReasonFlags'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CRLEntryObject { X509CRLEntryObject(org.spongycastle.asn1.x509.TBSCertList$CRLEntry); }', but not the descriptor class 'org.spongycastle.asn1.x509.TBSCertList$CRLEntry'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CRLEntryObject { X509CRLEntryObject(org.spongycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.spongycastle.asn1.x500.X500Name); }', but not the descriptor class 'org.spongycastle.asn1.x509.TBSCertList$CRLEntry'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CRLEntryObject { X509CRLEntryObject(org.spongycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.spongycastle.asn1.x500.X500Name); }', but not the descriptor class 'org.spongycastle.asn1.x500.X500Name'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CRLEntryObject { org.spongycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.spongycastle.asn1.x500.X500Name); }', but not the descriptor class 'org.spongycastle.asn1.x500.X500Name'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CRLEntryObject { org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CRLObject { X509CRLObject(org.spongycastle.asn1.x509.CertificateList); }', but not the descriptor class 'org.spongycastle.asn1.x509.CertificateList'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CertificateObject { X509CertificateObject(org.spongycastle.asn1.x509.Certificate); }', but not the descriptor class 'org.spongycastle.asn1.x509.Certificate'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CertificateObject { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CertificateObject { void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CertificateObject { org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CertificateObject { boolean isAlgIdEqual(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509CertificateObject { boolean isAlgIdEqual(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509SignatureUtil { void setSignatureParameters(java.security.Signature,org.spongycastle.asn1.ASN1Encodable); }', but not the descriptor class 'org.spongycastle.asn1.ASN1Encodable'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509SignatureUtil { java.lang.String getSignatureName(org.spongycastle.asn1.x509.AlgorithmIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.x509.AlgorithmIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509SignatureUtil { java.lang.String getDigestAlgName(org.spongycastle.asn1.ASN1ObjectIdentifier); }', but not the descriptor class 'org.spongycastle.asn1.ASN1ObjectIdentifier'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreAttrCertCollection { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreAttrCertCollection { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreCRLCollection { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreCRLCollection { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreCertCollection { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreCertCollection { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreCertPairCollection { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreCertPairCollection { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPAttrCerts { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPAttrCerts { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPCRLs { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPCRLs { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPCertPairs { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPCertPairs { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPCerts { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPCerts { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.provider.X509StoreLDAPCerts { java.util.Collection getCertificatesFromCrossCertificatePairs(org.spongycastle.x509.X509CertStoreSelector); }', but not the descriptor class 'org.spongycastle.x509.X509CertStoreSelector'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveParameterSpec { ECNamedCurveParameterSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { java.security.spec.ECField convertField(org.spongycastle.math.field.FiniteField); }', but not the descriptor class 'org.spongycastle.math.field.FiniteField'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { java.security.spec.ECPoint convertPoint(org.spongycastle.math.ec.ECPoint); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECNamedCurveSpec { ECNamedCurveSpec(java.lang.String,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECCurve'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECParameterSpec { ECParameterSpec(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[]); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.ECPublicKeySpec { ECPublicKeySpec(org.spongycastle.math.ec.ECPoint,org.spongycastle.jce.spec.ECParameterSpec); }', but not the descriptor class 'org.spongycastle.math.ec.ECPoint'
Note: the configuration keeps the entry point 'org.spongycastle.jce.spec.GOST3410ParameterSpec { org.spongycastle.jce.spec.GOST3410ParameterSpec fromPublicKeyAlg(org.spongycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters); }', but not the descriptor class 'org.spongycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters'
Note: the configuration keeps the entry point 'org.spongycastle.x509.X509StoreSpi { void engineInit(org.spongycastle.x509.X509StoreParameters); }', but not the descriptor class 'org.spongycastle.x509.X509StoreParameters'
Note: the configuration keeps the entry point 'org.spongycastle.x509.X509StoreSpi { java.util.Collection engineGetMatches(org.spongycastle.util.Selector); }', but not the descriptor class 'org.spongycastle.util.Selector'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.Header'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HeaderElement'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HeaderIterator'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpEntity'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpEntityEnclosingRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpHost'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpMessage'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpResponse'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.NameValuePair'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.ProtocolVersion'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.ReasonPhraseCatalog'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.RequestLine'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.StatusLine'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.HttpClient'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.ResponseHandler'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.AbortableHttpRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpDelete'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpEntityEnclosingRequestBase'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpGet'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpHead'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpOptions'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpPost'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpPut'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpRequestBase'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpTrace'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpUriRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.conn.ClientConnectionManager'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.conn.ClientConnectionRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.conn.ConnectTimeoutException'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.conn.ConnectionReleaseTrigger'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.entity.AbstractHttpEntity'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.entity.BasicHttpEntity'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.entity.ByteArrayEntity'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.impl.cookie.DateParseException'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.impl.cookie.DateUtils'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.message.AbstractHttpMessage'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.message.BasicHeader'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.message.BasicHttpResponse'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.message.BasicNameValuePair'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.message.BasicStatusLine'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.message.HeaderGroup'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.params.CoreConnectionPNames'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.params.HttpConnectionParams'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.params.HttpParams'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.protocol.HttpContext'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.Header'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HeaderElement'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HeaderIterator'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpEntity'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpEntityEnclosingRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpMessage'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.HttpResponse'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.NameValuePair'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.ReasonPhraseCatalog'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.RequestLine'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.StatusLine'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.HttpClient'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.ResponseHandler'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.AbortableHttpRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.client.methods.HttpUriRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.conn.ClientConnectionManager'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.conn.ClientConnectionRequest'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.conn.ConnectionReleaseTrigger'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.params.CoreConnectionPNames'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.params.HttpParams'
Note: the configuration explicitly specifies 'org.apache.http.**' to keep library class 'org.apache.http.protocol.HttpContext'
Note: there were 1 references to unknown classes.
      You should check your configuration for typos.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#unknownclass)
Note: there were 1029 unkept descriptor classes in kept class members.
      You should consider explicitly keeping the mentioned classes
      (using '-keep').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#descriptorclass)
Note: there were 68 library classes explicitly being kept.
      You don't need to keep library classes; they are already left unchanged.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#libraryclass)
Note: there were 4 unresolved dynamic references to classes or interfaces.
      You should check if you need to specify additional program jars.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclass)
Note: there were 1 class casts of dynamically created class instances.
      You might consider explicitly keeping the mentioned classes and/or
      their implementations (using '-keep').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclasscast)
Warning: there were 1 unresolved references to library class members.
         You probably need to update the library versions.
         (http://proguard.sourceforge.net/manual/troubleshooting.html#unresolvedlibraryclassmember)
Warning: Exception while processing task java.io.IOException: Please correct the above warnings first.
Thread(Tasks limiter_1): destruction
:app:transformClassesAndResourcesWithProguardForRelease FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':app:transformClassesAndResourcesWithProguardForRelease'.
> Job failed, see logs for details

* Try:
Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Exception is:
org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:transformClassesAndResourcesWithProguardForRelease'.
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:100)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:70)
	at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)
	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62)
	at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)
	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:60)
	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:97)
	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:87)
	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:52)
	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)
	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)
	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)
	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)
	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.run(DefaultTaskGraphExecuter.java:248)
	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)
	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)
	at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)
	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)
	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:241)
	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:230)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98)
	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:626)
	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:581)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
Caused by: java.lang.RuntimeException: Job failed, see logs for details
	at com.android.build.gradle.internal.transforms.ProGuardTransform.transform(ProGuardTransform.java:196)
	at com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:221)
	at com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:217)
	at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)
	at com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:212)
	at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)
	at org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:46)
	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)
	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:121)
	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)
	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)
	at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)
	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:110)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:92)
	... 29 more
Caused by: java.io.IOException: Please correct the above warnings first.
	at proguard.Initializer.execute(Initializer.java:473)
	at proguard.ProGuard.initialize(ProGuard.java:233)
	at proguard.ProGuard.execute(ProGuard.java:98)
	at com.android.build.gradle.internal.transforms.BaseProguardAction.runProguard(BaseProguardAction.java:61)
	at com.android.build.gradle.internal.transforms.ProGuardTransform.doMinification(ProGuardTransform.java:253)
	at com.android.build.gradle.internal.transforms.ProGuardTransform.access$000(ProGuardTransform.java:63)
	at com.android.build.gradle.internal.transforms.ProGuardTransform$1.run(ProGuardTransform.java:173)
	at com.android.builder.tasks.Job.runTask(Job.java:47)
	at com.android.build.gradle.tasks.SimpleWorkQueue$EmptyThreadContext.runTask(SimpleWorkQueue.java:41)
	at com.android.builder.tasks.WorkQueue.run(WorkQueue.java:282)


* Get more help at https://help.gradle.org

BUILD FAILED in 1m 36s
54 actionable tasks: 54 executed

2018-05-22 05:22:23,394 INFO  FullProcessService - Found APK file: /tmp/rdisk/2328/src/app/build/outputs/apk/debug/app-debug.apk
